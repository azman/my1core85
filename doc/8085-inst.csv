00000000;00000000;NOP;1;No operation
00000001;00RP0001;LXI rp,data16;3;Load RP immediate
00000010;00RP0010;STAX rp;2;Store ACC indirect
00000011;00RP0011;INX rp;1;Increment RP
00000100;00DDD100;INR r;1;Increment register
00000101;00DDD101;DCR r;1;Decrement register
00000110;00DDD110;MVI r,data;2;Move immediate
00000111;00000111;RLC;1;Rotate left
00001000;;;;
00001001;00RP1001;DAD rp;3;Add RP to HL
00001010;00RP1010;LDAX rp;2;Load ACC indirect
00001011;00RP1011;DCX rp;1;Decrement RP
00001100;00DDD100;INR r;1;Increment register
00001101;00DDD101;DCR r;1;Decrement register
00001110;00DDD110;MVI r,data;2;Move immediate
00001111;00001111;RRC;1;Rotate right
00010000;;;;
00010001;00RP0001;LXI rp,data16;3;Load RP immediate
00010010;00RP0010;STAX rp;2;Store ACC indirect
00010011;00RP0011;INX rp;1;Increment RP
00010100;00DDD100;INR r;1;Increment register
00010101;00DDD101;DCR r;1;Decrement register
00010110;00DDD110;MVI r,data;2;Move immediate
00010111;00010111;RAL;1;Rotate left through CY
00011000;;;;
00011001;00RP1001;DAD rp;3;Add RP to HL
00011010;00RP1010;LDAX rp;2;Load ACC indirect
00011011;00RP1011;DCX rp;1;Decrement RP
00011100;00DDD100;INR r;1;Increment register
00011101;00DDD101;DCR r;1;Decrement register
00011110;00DDD110;MVI r,data;2;Move immediate
00011111;00011111;RAR;1;Rotate right through CY
00100000;00100000;RIM;1;Read (SID|I7.5|I6|I5|IE|M7.5|M6|M5)
00100001;00RP0001;LXI rp,data16;3;Load RP immediate
00100010;00100010;SHLD addr;5;Store HL direct
00100011;00RP0011;INX rp;1;Increment RP
00100100;00DDD100;INR r;1;Increment register
00100101;00DDD101;DCR r;1;Decrement register
00100110;00DDD110;MVI r,data;2;Move immediate
00100111;00100111;DAA;1;Decimal Adjust Accumulator
00101000;;;;
00101001;00RP1001;DAD rp;3;Add RP to HL
00101010;00101010;LHLD addr;5;Load HL direct
00101011;00RP1011;DCX rp;1;Decrement RP
00101100;00DDD100;INR r;1;Increment register
00101101;00DDD101;DCR r;1;Decrement register
00101110;00DDD110;MVI r,data;2;Move immediate
00101111;00101111;CMA;1;Complement ACC
00110000;00110000;SIM;1;Set (SOD|SOE|X|R7.5|MSE|M7.5|M6|M5)
00110001;00RP0001;LXI rp,data16;3;Load RP immediate
00110010;00110010;STA addr;4;Store ACC direct
00110011;00RP0011;INX rp;1;Increment RP
00110100;00110100;INR M;3;Increment M
00110101;00110101;DCR M;3;Decrement M
00110110;00110110;MVI M,data;3;Move to M immediate
00110111;00110111;STC;1;Set CY
00111000;;;;
00111001;00RP1001;DAD rp;3;Add RP to HL
00111010;00111010;LDA addr;4;Load ACC direct
00111011;00RP1011;DCX rp;1;Decrement RP
00111100;00DDD100;INR r;1;Increment register
00111101;00DDD101;DCR r;1;Decrement register
00111110;00DDD110;MVI r,data;2;Move immediate
00111111;00111111;CMC;1;Complement CY
01000000;01DDDSSS;MOV r1,r2;1;Move register
01000001;01DDDSSS;MOV r1,r2;1;Move register
01000010;01DDDSSS;MOV r1,r2;1;Move register
01000011;01DDDSSS;MOV r1,r2;1;Move register
01000100;01DDDSSS;MOV r1,r2;1;Move register
01000101;01DDDSSS;MOV r1,r2;1;Move register
01000110;01DDD110;MOV r,M;2;Move from M
01000111;01DDDSSS;MOV r1,r2;1;Move register
01001000;01DDDSSS;MOV r1,r2;1;Move register
01001001;01DDDSSS;MOV r1,r2;1;Move register
01001010;01DDDSSS;MOV r1,r2;1;Move register
01001011;01DDDSSS;MOV r1,r2;1;Move register
01001100;01DDDSSS;MOV r1,r2;1;Move register
01001101;01DDDSSS;MOV r1,r2;1;Move register
01001110;01DDD110;MOV r,M;2;Move from M
01001111;01DDDSSS;MOV r1,r2;1;Move register
01010000;01DDDSSS;MOV r1,r2;1;Move register
01010001;01DDDSSS;MOV r1,r2;1;Move register
01010010;01DDDSSS;MOV r1,r2;1;Move register
01010011;01DDDSSS;MOV r1,r2;1;Move register
01010100;01DDDSSS;MOV r1,r2;1;Move register
01010101;01DDDSSS;MOV r1,r2;1;Move register
01010110;01DDD110;MOV r,M;2;Move from M
01010111;01DDDSSS;MOV r1,r2;1;Move register
01011000;01DDDSSS;MOV r1,r2;1;Move register
01011001;01DDDSSS;MOV r1,r2;1;Move register
01011010;01DDDSSS;MOV r1,r2;1;Move register
01011011;01DDDSSS;MOV r1,r2;1;Move register
01011100;01DDDSSS;MOV r1,r2;1;Move register
01011101;01DDDSSS;MOV r1,r2;1;Move register
01011110;01DDD110;MOV r,M;2;Move from M
01011111;01DDDSSS;MOV r1,r2;1;Move register
01100000;01DDDSSS;MOV r1,r2;1;Move register
01100001;01DDDSSS;MOV r1,r2;1;Move register
01100010;01DDDSSS;MOV r1,r2;1;Move register
01100011;01DDDSSS;MOV r1,r2;1;Move register
01100100;01DDDSSS;MOV r1,r2;1;Move register
01100101;01DDDSSS;MOV r1,r2;1;Move register
01100110;01DDD110;MOV r,M;2;Move from M
01100111;01DDDSSS;MOV r1,r2;1;Move register
01101000;01DDDSSS;MOV r1,r2;1;Move register
01101001;01DDDSSS;MOV r1,r2;1;Move register
01101010;01DDDSSS;MOV r1,r2;1;Move register
01101011;01DDDSSS;MOV r1,r2;1;Move register
01101100;01DDDSSS;MOV r1,r2;1;Move register
01101101;01DDDSSS;MOV r1,r2;1;Move register
01101110;01DDD110;MOV r,M;2;Move from M
01101111;01DDDSSS;MOV r1,r2;1;Move register
01110000;01110SSS;MOV M,r;2;Move to M
01110001;01110SSS;MOV M,r;2;Move to M
01110010;01110SSS;MOV M,r;2;Move to M
01110011;01110SSS;MOV M,r;2;Move to M
01110100;01110SSS;MOV M,r;2;Move to M
01110101;01110SSS;MOV M,r;2;Move to M
01110110;01110110;HLT;1+;Halt
01110111;01110SSS;MOV M,r;2;Move to M
01111000;01DDDSSS;MOV r1,r2;1;Move register
01111001;01DDDSSS;MOV r1,r2;1;Move register
01111010;01DDDSSS;MOV r1,r2;1;Move register
01111011;01DDDSSS;MOV r1,r2;1;Move register
01111100;01DDDSSS;MOV r1,r2;1;Move register
01111101;01DDDSSS;MOV r1,r2;1;Move register
01111110;01DDD110;MOV r,M;2;Move from M
01111111;01DDDSSS;MOV r1,r2;1;Move register
10000000;10000SSS;ADD r;1;Add register
10000001;10000SSS;ADD r;1;Add register
10000010;10000SSS;ADD r;1;Add register
10000011;10000SSS;ADD r;1;Add register
10000100;10000SSS;ADD r;1;Add register
10000101;10000SSS;ADD r;1;Add register
10000110;10000110;ADD M;2;Add M
10000111;10000SSS;ADD r;1;Add register
10001000;10001SSS;ADC r;1;Add register with CY
10001001;10001SSS;ADC r;1;Add register with CY
10001010;10001SSS;ADC r;1;Add register with CY
10001011;10001SSS;ADC r;1;Add register with CY
10001100;10001SSS;ADC r;1;Add register with CY
10001101;10001SSS;ADC r;1;Add register with CY
10001110;10001110;ADC M;2;Add M with CY
10001111;10001SSS;ADC r;1;Add register with CY
10010000;10010SSS;SUB r;1;Subtract register
10010001;10010SSS;SUB r;1;Subtract register
10010010;10010SSS;SUB r;1;Subtract register
10010011;10010SSS;SUB r;1;Subtract register
10010100;10010SSS;SUB r;1;Subtract register
10010101;10010SSS;SUB r;1;Subtract register
10010110;10010110;SUB M;2;Subtract Memory
10010111;10010SSS;SUB r;1;Subtract register
10011000;10011SSS;SBB r;1;Subtract register with CY
10011001;10011SSS;SBB r;1;Subtract register with CY
10011010;10011SSS;SBB r;1;Subtract register with CY
10011011;10011SSS;SBB r;1;Subtract register with CY
10011100;10011SSS;SBB r;1;Subtract register with CY
10011101;10011SSS;SBB r;1;Subtract register with CY
10011110;10011110;SBB M;2;Subtract M with CY
10011111;10011SSS;SBB r;1;Subtract register with CY
10100000;10100SSS;ANA r;1;AND register
10100001;10100SSS;ANA r;1;AND register
10100010;10100SSS;ANA r;1;AND register
10100011;10100SSS;ANA r;1;AND register
10100100;10100SSS;ANA r;1;AND register
10100101;10100SSS;ANA r;1;AND register
10100110;10100110;ANA M;2;AND M
10100111;10100SSS;ANA r;1;AND register
10101000;10101SSS;XRA r;1;XOR register
10101001;10101SSS;XRA r;1;XOR register
10101010;10101SSS;XRA r;1;XOR register
10101011;10101SSS;XRA r;1;XOR register
10101100;10101SSS;XRA r;1;XOR register
10101101;10101SSS;XRA r;1;XOR register
10101110;10101110;XRA M;2;XOR M
10101111;10101SSS;XRA r;1;XOR register
10110000;10110SSS;ORA r;1;OR register
10110001;10110SSS;ORA r;1;OR register
10110010;10110SSS;ORA r;1;OR register
10110011;10110SSS;ORA r;1;OR register
10110100;10110SSS;ORA r;1;OR register
10110101;10110SSS;ORA r;1;OR register
10110110;10110110;ORA M;2;OR M
10110111;10110SSS;ORA r;1;OR register
10111000;10111SSS;CMP r;1;Compare register
10111001;10111SSS;CMP r;1;Compare register
10111010;10111SSS;CMP r;1;Compare register
10111011;10111SSS;CMP r;1;Compare register
10111100;10111SSS;CMP r;1;Compare register
10111101;10111SSS;CMP r;1;Compare register
10111110;10111110;CMP M;2;Compare M
10111111;10111SSS;CMP r;1;Compare register
11000000;11CCC000;Rccc;1/3;Conditional return
11000001;11RP0001;POP rp;3;Pop RP
11000010;11CCC010;Jccc addr;2/3;Conditional jump Z,C,P,S
11000011;11000011;JMP addr;3;Jump
11000100;11CCC100;Cccc addr;2/5;Conditional call
11000101;11RP0101;PUSH rp;3;Push RP
11000110;11000110;ADI data;2;Add immediate
11000111;11NNN111;RST n;3;Restart
11001000;11CCC000;Rccc;1/3;Conditional return
11001001;11001001;RET;3;Return
11001010;11CCC010;Jccc addr;2/3;Conditional jump Z,C,P,S
11001011;;;;
11001100;11CCC100;Cccc addr;2/5;Conditional call
11001101;11001101;CALL addr;5;Call subroutine
11001110;11001110;ACI data;2;Add immediate with CY
11001111;11NNN111;RST n;3;Restart
11010000;11CCC000;Rccc;1/3;Conditional return
11010001;11RP0001;POP rp;3;Pop RP
11010010;11CCC010;Jccc addr;2/3;Conditional jump Z,C,P,S
11010011;11010011;OUT port;3;Ouput to port
11010100;11CCC100;Cccc addr;2/5;Conditional call
11010101;11RP0101;PUSH rp;3;Push RP
11010110;11010110;SUI data;2;Subtract immediate
11010111;11NNN111;RST n;3;Restart
11011000;11CCC000;Rccc;1/3;Conditional return
11011001;;;;
11011010;11CCC010;Jccc addr;2/3;Conditional jump Z,C,P,S
11011011;11011011;IN port;3;Input from port
11011100;11CCC100;Cccc addr;2/5;Conditional call
11011101;;;;
11011110;11011110;SBI data;2;Subtract immediate with CY
11011111;11NNN111;RST n;3;Restart
11100000;11CCC000;Rccc;1/3;Conditional return
11100001;11RP0001;POP rp;3;Pop RP
11100010;11CCC010;Jccc addr;2/3;Conditional jump Z,C,P,S
11100011;11100011;XHTL;5;Exchange stack top with HL
11100100;11CCC100;Cccc addr;2/5;Conditional call
11100101;11RP0101;PUSH rp;3;Push RP
11100110;11100110;ANI data;2;AND immediate
11100111;11NNN111;RST n;3;Restart
11101000;11CCC000;Rccc;1/3;Conditional return
11101001;11101001;PCHL;1;Jump HL indirect (PC = HL)
11101010;11CCC010;Jccc addr;2/3;Conditional jump Z,C,P,S
11101011;11101011;XCHG;1;Exchange HL & DE
11101100;11CCC100;Cccc addr;2/5;Conditional call
11101101;;;;
11101110;11101110;XRI data;2;XOR immediate
11101111;11NNN111;RST n;3;Restart
11110000;11CCC000;Rccc;1/3;Conditional return
11110001;11110001;POP PSW;3;Pop (ACC,CY|X|P|X|AC|X|Z|S)
11110010;11CCC010;Jccc addr;2/3;Conditional jump Z,C,P,S
11110011;11110011;DI;1;Disable interrupts
11110100;11CCC100;Cccc addr;2/5;Conditional call
11110101;11110101;PUSH PSW;3;Push (ACC,CY|X|P|X|AC|X|Z|S)
11110110;11110110;ORI data;2;OR immediate
11110111;11NNN111;RST n;3;Restart
11111000;11CCC000;Rccc;1/3;Conditional return
11111001;11111001;SPHL;1;Move HL to SP
11111010;11CCC010;Jccc addr;2/3;Conditional jump Z,C,P,S
11111011;11111011;EI;1;Enable interrupts
11111100;11CCC100;Cccc addr;2/5;Conditional call
11111101;;;;
11111110;11111110;CPI data;2;Compare immediate
11111111;11NNN111;RST n;3;Restart
