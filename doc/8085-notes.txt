--------------------------------
8-bit Microprocessor Core Design
--------------------------------

Basically trying to imitate 8085 functionality. Will implement all 8085
instruction set, but some design decisions will differ (e.g. data/address
bus will no longer be multiplexed - not working on 'drop-in' replacement!)
because we no longer have the limitations that the original designers had.

Note: try to implement the multiplexed addr/data bus before moving on to
custom design.

PINS
----

- 8-bit DATA BUS, 16-bit ADDR BUS [NOT MULTIPLEXED]
- RSTIN/RSTOUT	= Reset IN (active LO) & OUT
- SDIN/SDOUT	= Serial Data IN & OUT [MAYBE IMPLEMENT FULL RS232?]
- RD/WR		= External Read & Write (both active LO)
- VDD/GND	= Power Rails
- X1/X2		= Crystal Pins [NOT NEEDED - USE FPGA CLK GENERATOR?]
- ALE, S2, S1, IO/M_ = Control Pins [ALE NOT NEEDED IF NO MULTIPLEXED BUS]

8-BIT REGISTERS
---------------

0-Register B
1-Register C
2-Register D
3-Register E
4-Register H
5-Register L
6-External Memory
7-Accumulator


16-BIT REGISTERS
----------------

0-Register Pair BC
1-Register Pair DE
2-Register Pair HL
3-Register Pair SP

-------------
General Notes
-------------

- RESET_IN_ should remain low for 10ms after min vcc
  = 3 clock cycles for correct reset operation

----------------------
Grep-ping instruction?
----------------------

- looking for instruction with six-state opcode fetch

cat doc/8085-inst.csv | grep "^.*;.*;.*;.*;S.*;.*$"

- looking for instruction with bus idle machine cycle

cat doc/8085-inst.csv | grep "^.*;.*;.*;.*;.*B.*;.*$"

- to count, simply append  " | wc -l"

- looking for instruction using register pair

cat doc/8085-inst.csv | grep "^.*;.*RP.*;.*;.*;.*;.*$"
