--------------------------------
8-bit Microprocessor Core Design
--------------------------------

Basically trying to imitate 8085 functionality. Will implement all 8085
instruction set, but some design decisions will differ (e.g. data/address
bus will no longer be multiplexed - not working on 'drop-in' replacement!)
because we no longer have the limitations that the original designers had.

PINS
----

- 8-bit DATA BUS, 16-bit ADDR BUS [NOT MULTIPLEXED]
- RSTIN/RSTOUT	= Reset IN (active LO) & OUT
- SDIN/SDOUT	= Serial Data IN & OUT [MAYBE IMPLEMENT FULL RS232?]
- RD/WR		= External Read & Write (both active LO)
- VDD/GND	= Power Rails
- X1/X2		= Crystal Pins [NOT NEEDED - USE FPGA CLK GENERATOR?]
- ALE, S2, S1, IO/M_ = Control Pins [ALE NOT NEEDED IF NO MULTIPLEXED BUS]

8-BIT REGISTERS
---------------

0-Register B
1-Register C
2-Register D
3-Register E
4-Register H
5-Register L
6-External Memory
7-Accumulator


16-BIT REGISTERS
----------------

0-Register Pair BC
1-Register Pair DE
2-Register Pair HL
3-Register Pair SP


STATE MACHINE I/P
-----------------

RESET


STATE MACHINE O/P
-----------------

EN_EXTD  = TS + TP
LATCH_OP = TP
CLR_PC   = TP
EN_IR    = T1
RESET    = T2
EN_PC    = T2
RD       = T3 + T4
WR       = T4
LOAD_PC  = T4
AUWR_EN  = T6


CONTROL CIRCUIT O/P
-------------------

RAM_WR		= I[LDR].WR
RAM_RD		= I[STR].RD
REG_WR		= (I[STA]+I[STO]).WR
REG_RD		= (I[LDA]+I[LDO]).RD
PC_WR		= (I[JMP]+I[JB]+I[JNB]).WR
ACC_RD		= ((I[STA]+(I[LDR].!ARG0))+(I[MATH].!(ARG0+ARG1))).RD
ACC_WR		= (I[LDA]+(I[STR].!ARG0)).WR
OPR_RD		= (I[STO]+(I[LDR].ARG0)).RD
OPR_WR		= (I[LDO]+(I[STR].ARG0)).WR
CNTR_RD		= (I[INC].ARG0).RD
CNT_RST		= (I[INC].!ARG0).RD
STAT_RD		= I[GETS].RD
AU_RD		= I[MATH].RD
PCH_WR		= I[LDPC].WR
TX_RD		= I[TX].RD
DONE		= I[GEN].(ARG0.ARG1)
EXT_ADD_RD	= (I[GEN].!ARG0).RD
INT_ADD_RD	= (I[GEN].ARG0).RD
PC_JMP		= I[JMP]+(I[JNB].!FLAG)+(I[JB].FLAG)
SEL_RX		= I[RX].WR
AU_CY		= I[MATH].(ARG0+ARG1)
