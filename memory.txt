// my memory module
c3 // 11_000_011 @ jmp 0040
40
00
@0020
c9 // 11_001_001 @ ret
@0040
3e // 00_111_110 @ mvi a, aa
aa
47 // 01_000_111 @ mov b, a
af // 10_101_111 @ xra a
31 // 00_110_001 @ lxi sp, 3ff0
f0
3f
21 // 00_100_001 @ lxi h, 2000
00
20
11 // 00_010_001 @ lxi d, 2002
02
20
2c // 00_101_100 @ inr l
4e // 01_001_110 @ mov c, m
36 // 00_110_110 @ mvi m, ff
ff
35 // 00_110_101 @ dcr m
71 // 01_110_001 @ mov m, c
2d // 00_101_101 @ dcr l
67 // 01_100_111 @ mov h, a
86 // 10_000_110 @ add m
d6 // 11_010_110 @ sui m, 3
03
39 // 00_111_001 @ dad sp
29 // 00_101_001 @ dad hl
23 // 00_100_011 @ inx h
00 // 00_000_000 @ nop
0b // 00_001_011 @ dcx b
3b // 00_111_011 @ dcx sp
02 // 00_000_010 @ stax b
1a // 00_011_010 @ ldax d
12 // 00_001_010 @ ldax b
30 // 00_110_000 @ sim
af // 10_101_111 @ xra a
20 // 00_100_000 @ rim
32 // 00_110_010 @ sta 2004
04
20
3a // 00_111_010 @ lda 0041
41
00
22 // 00_100_010 @ shld 2004
04
20
2a // 00_101_010 @ lhld 2002
02
20
07 // 00_000_111 @ rlc
0f // 00_001_111 @ rrc
1f // 00_011_111 @ rar
17 // 00_010_111 @ ral
27 // 00_100_111 @ daa
2f // 00_101_111 @ cma
3f // 00_111_111 @ cmc
37 // 00_110_111 @ stc
33 // 00_110_011 @ inx sp
d5 // 11_010_101 @ push d
f5 // 11_110_101 @ push psw
c1 // 11_000_001 @ pop b
e1 // 11_100_001 @ pop h
c3 // 11_000_011 @ jmp 1000
00
10
@1000
0e // 00_001_110 @ mvi c, 2
02
0d // 00_001_101 @ dcr c
c2 // 11_110_010 @ jnz 1002
02
10
d3 // 11_010_011 @ out 80
80
db // 11_011_011 @ in 81
81
cd// 11_001_101 @ call 1ff0
f0
1f
f9 // 11_111_001 @ sphl
21 // 00_100_001 @ lxi h, 2000
00
1c
e9 // 11_101_001 @ pchl
@1c00 // ending stage
eb // 11_101_011 @ xchg
e3 // 11_100_011 @ xthl
fb // 11_111_011 @ ei
f3 // 11_110_011 @ di
e7 // 11_100_111 @ rst 4
76 // 01_110_110 @ hlt
@1ff0 // sub-routine
35 // 00_110_101 @ dcr m
c9 // 11_001_001 @ ret
@2000 // prepare data memory?
fa
ce
ac
e5
